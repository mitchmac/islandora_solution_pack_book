<?php

/**
 * @file
 *
 * Defines all the hooks this module implements.
 *
 * @todo Since we don't have the tabs module, we need to create paths for Books.
 */

// Permissions
define('PERM_ISLANDORA_BOOK_DELETE_PAGE', 'delete pages');
define('PERM_ISLANDORA_BOOK_MANAGE_BOOK', 'manage book object');
define('PERM_ISLANDORA_BOOK_MANAGE_PAGE', 'manage page object');
define('PERM_ISLANDORA_BOOK_MANAGE_DELETED_BOOKS', 'manage deleted books');
// Variables


/**
 * Implements hook_menu().
 */
function islandora_book_menu() {
  return array(
    'admin/islandora/book' => array(
      'title' => 'Book Collection',
      'description' => 'Configuration the Book solution pack.',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('islandora_book_admin_settings_form'),
      'access arguments' => array('administer site configuration'),
      'file' => 'islandora_book.admin.inc',
      'type' => MENU_NORMAL_ITEM,
    ),
    'fedora/book/%islandora_object/%' => array(
      'title' => t('Book view'),
      'page callback' => 'islandora_book_create_book_view',
      'page arguments' => array(2, 3),
      'access arguments' => array(FEDORA_VIEW),
      'type' => MENU_CALLBACK,
    ),
    'restore/books' => array(
      'title' => t('Deleted Books'),
      'file' => 'management/book_undelete.inc',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('book_undelete_form'),
      'access arguments' => array(PERM_ISLANDORA_BOOK_MANAGE_DELETED_BOOKS),
      'type' => MENU_NORMAL_ITEM,
    ),
    'fedora/book_viewer' => array(
      'title' => t('Book viewer'),
      'page callback' => 'islandora_book_viewer',
      'access arguments' => array(FEDORA_VIEW),
      'type' => MENU_CALLBACK,
    ),
    'islandora/book/ocr' => array(
      'page callback' => 'update_ocr_div',
      'access arguments' => array(FEDORA_VIEW),
      'file' => 'islandora_book.admin.inc',
      'type' => MENU_CALLBACK,
    ),
    'islandora/book/updatepage' => array(
      'page callback' => 'page_management_wrapper',
      'access arguments' => array(PERM_ISLANDORA_BOOK_MANAGE_BOOK),
      'file' => 'ObjectManager.inc',
      'type' => MENU_CALLBACK,
    ),
    'islandora/book/upload' => array(
      'page callback' => 'upload_pages',
      'access arguments' => array(PERM_ISLANDORA_BOOK_MANAGE_BOOK),
      'file' => 'pageload/upload_frame.inc',
      'type' => MENU_CALLBACK,
    ),
    'islandora/book/borndigital' => array(
      'page callback' => 'create_borndigital',
      'access arguments' => array(FEDORA_VIEW),
      'file' => 'management/born_digital.inc',
      'type' => MENU_CALLBACK,
    ),
    'islandora/book/upload_setup' => array(
      'page callback' => 'upload_setup',
      'access arguments' => array(PERM_ISLANDORA_BOOK_MANAGE_BOOK),
      'file' => 'pageload/upload_frame.inc',
      'type' => MENU_CALLBACK,
    ),
    'islandora/book/process_file' => array(
      'page callback' => 'process_file',
      'access arguments' => array(FEDORA_VIEW),
      'file' => 'pageload/upload_frame.inc',
      'type' => MENU_CALLBACK,
    ),
    'islandora/book/process_page_directory' => array(
      'page callback' => 'prep_add_form',
      'access arguments' => array(FEDORA_VIEW),
      'file' => 'pageload/prepare_add_pages_form.inc',
      'type' => MENU_CALLBACK,
    ),
    'islandora/book/delete_book_files' => array(
      'page callback' => 'delete_book_page_files',
      'access arguments' => array(FEDORA_VIEW),
      'file' => 'pageload/upload_frame.inc',
      'type' => MENU_CALLBACK,
    ),
    'islandora/page/manage' => array(
      'page callback' => 'islandora_book_page_management',
      'access arguments' => array(PERM_ISLANDORA_BOOK_MANAGE_PAGE),
      'file' => 'page_object_manager.inc',
      'type' => MENU_CALLBACK,
    ),
    'islandora/book/manage' => array(
      'page callback' => 'islandora_book_display_links',
      'access arguments' => array(PERM_ISLANDORA_BOOK_MANAGE_BOOK),
      'file' => 'management/IslandoraBookDisplayLinks.inc',
      'type' => MENU_CALLBACK,
    ),
    'islandora/book/management' => array(
      'page callback' => 'book_management_wrapper',
      'access arguments' => array(PERM_ISLANDORA_BOOK_MANAGE_BOOK),
      'file' => 'book_object_manager.inc',
      'type' => MENU_CALLBACK,
    )
  );
}

/**
 * Implements hook_perm().
 */
function islandora_book_perm() {
  return array(
    PERM_ISLANDORA_BOOK_DELETE_PAGE,
    PERM_ISLANDORA_BOOK_MANAGE_BOOK,
    PERM_ISLANDORA_BOOK_MANAGE_PAGE,
    PERM_ISLANDORA_BOOK_MANAGE_DELETED_BOOKS
  );
}

/**
 * Implementation of hook_theme().
 */
function islandora_book_theme() {
  return array(
    'islandora_book_book_search_form' => array(
      'arguments' => array('form' => NULL),
    ),
    'islandora_book_simple_book_search_form' => array(
      'arguments' => array('form' => NULL),
    ),
    'islandora_book_page_table' => array(
      'arguments' => array('element' => NULL),
      'file' => 'management/IslandoraBookPageTable.inc',
    ),
    'islandora_book_page_reorder_table' => array(
      'arguments' => array('element' => NULL),
      'file' => 'management/IslandoraPageReorderTable.inc',
    ),
    'islandora_book_undelete_table' => array(
      'arguments' => array('element' => NULL),
      'file' => 'management/IslandoraBookUndelete.inc',
    ),
    'islandora_file_reorder_table' => array(
      'arguments' => array('element' => NULL),
      'file' => 'management/IslandoraFileReorderTable.inc',
    )
  );
}

/**
 * Implements hook_help().
 */
function islandora_book_help($path, $arg) {
  switch ($path) {
    case 'admin/help#islandora_book':
      return t('<p>The Islandora Book Module allows users to create digital
                representations of books within the Fedora Repository. A book
                object is created using !mods data. A collection of associated
                page objects may then be created created. Page objects are
                created by ingesting a zipped folder of TIFF images, each
                representing a distinct page. Page TIFFs are used to create a
                series of Fedora datastreams on ingestion.  These streams
                include derivative images for display - JPEGS, Thumbnails, and
                JP2s, and one ore more OCR streams for text display and analysis
                </p>
                <h3>Configuration</h3>
                <p>The page datatreams may be created on this server, or on an
                external processing server with !microservices.<br/> To process
                images from TIFFS on this server check <strong>Create derivative
                images locally?</strong> on the admin page. (Link at the bottom
                of this page).<br/> TO create OCR streams on this server check
                <strong>Perform OCR on incoming TIFF images?</strong>.<br/><br/>
                </p>', array(
                  '!microservices' => l("Fedora Microservices", 'https://github.com/Islandora/fedora_microservices'),
                  '!mods' => l('MODS', 'http://www.loc.gov/standards/mods/'))
      );
  }
}

/**
 * Implements hook_islandora_xml_form_builder_form_associations().
 */
function islandora_book_islandora_xml_form_builder_form_associations() {
  return array(
    'islandora_book_mods_form' => array(
      'content_model' => 'islandora:bookCModel',
      'form_name' => 'Islandora Book MODS Form',
      'dsid' => 'MODS',
      'title_field' => array('titleInfo', 'title'),
      'transform' => 'mods_to_dc.xsl',
      'template' => FALSE,
    ),
    'islandora_book_ia_mods_form' => array(
      'content_model' => 'islandora:iabookCModel',
      'form_name' => 'Islandora Book MODS Form',
      'dsid' => 'MODS',
      'title_field' => array('titleInfo', 'title'),
      'transform' => 'mods_to_dc.xsl',
      'template' => FALSE,
    )
  );
}

/**
 * Implements hook_islandora_xml_form_builder_forms().
 */
function islandora_book_islandora_xml_form_builder_forms() {
  $module_path = drupal_get_path('module', 'islandora_book');
  return array(
    'Islandora Book MODS form' => array(
      'form_file' => "$module_path/xml/mods_books.xml",
    ),
  );
}

/**
 * Implements hook_islandora_required_objects().
 */
function islandora_book_islandora_required_objects() {
  $module_path = drupal_get_path('module', 'islandora_book');
  return array(
    'islandora_book' => array(
      'module' => 'islandora_book',
      'title' => 'Islandora Books',
      'objects' => array(
        array(
          'foxml_file' => "$module_path/xml/islandora_pageCModel.xml",
          'pid' => 'islandora:pageCModel',
          'dsid' => NULL,
          'datastream_file' => NULL,
          'dsversion' => NULL,
        ),
        array(
          'foxml_file' => "$module_path/xml/islandora_bd_pageCModel.xml",
          'pid' => 'islandora:bd_pageCModel',
          'dsid' => NULL,
          'datastream_file' => NULL,
          'dsversion' => NULL,
        ),
        array(
          'foxml_file' => "$module_path/xml/islandora_iaBookCModel.xml",
          'pid' => 'islandora:iaBookCModel',
          'dsid' => NULL,
          'datastream_file' => NULL,
          'dsversion' => NULL,
        ),
        array(
          'foxml_file' => "$module_path/xml/islandora_bookCModel.xml",
          'pid' => 'islandora:bookCModel',
          'dsid' => NULL,
          'datastream_file' => NULL,
          'dsversion' => NULL,
        ),
        array(
          'foxml_file' => "$module_path/xml/islandora_jp2Sdef.xml",
          'pid' => 'islandora:jp2Sdef',
          'dsid' => NULL,
          'datastream_file' => NULL,
          'dsversion' => NULL,
        ),
        array(
          'foxml_file' => "$module_path/xml/islandora_viewerSdef.xml",
          'pid' => 'islandora:viewerSdef',
          'dsid' => NULL,
          'datastream_file' => NULL,
          'dsversion' => NULL,
        ),
        array(
          'foxml_file' => "$module_path/xml/islandora_viewerSdep-bookCModel.xml",
          'pid' => 'islandora:viewerSdep-bookCModel',
          'dsid' => NULL,
          'datastream_file' => NULL,
          'dsversion' => NULL,
        ),
        array(
          'foxml_file' => "$module_path/xml/islandora_viewerSdep-pageCModel.xml",
          'pid' => 'islandora:viewerSdep-pageCModel',
          'dsid' => NULL,
          'datastream_file' => NULL,
          'dsversion' => NULL,
        ),
        array(
          'foxml_file' => "$module_path/xml/islandora_tei2htmlSdef.xml",
          'pid' => 'islandora:tei2htmlSdef',
          'dsid' => NULL,
          'datastream_file' => NULL,
          'dsversion' => NULL,
        ),
        array(
          'foxml_file' => "$module_path/xml/islandora_tei2htmlSdep-pageCModel.xml",
          'pid' => 'islandora:tei2htmlSdep-pageCModel',
          'dsid' => NULL,
          'datastream_file' => NULL,
          'dsversion' => NULL,
        ),
        array(
          'foxml_file' => "$module_path/xml/islandora_book_collection.xml",
          'pid' => 'islandora:collection',
          'dsid' => NULL,
          'datastream_file' => NULL,
          'dsversion' => NULL,
        ),
        array(
          'foxml_file' => "$module_path/xml/islandora_organization-entityCModel.xml",
          'pid' => 'islandora:organization-entityCModel',
          'dsid' => NULL,
          'datastream_file' => NULL,
          'dsversion' => NULL,
        ),
        array(
          'foxml_file' => "$module_path/xml/islandora_place-entityCModel.xml",
          'pid' => 'islandora:place-entityCModel',
          'dsid' => NULL,
          'datastream_file' => NULL,
          'dsversion' => NULL,
        ),
        array(
          'foxml_file' => "$module_path/xml/islandora_person-entityCModel.xml",
          'pid' => 'islandora:person-entityCModel',
          'dsid' => NULL,
          'datastream_file' => NULL,
          'dsversion' => NULL,
        ),
        array(
          'foxml_file' => "$module_path/xml/islandora_jp2Sdep-pageCModel.xml",
          'pid' => 'islandora:jp2Sdep-pageCModel',
          'dsid' => NULL,
          'datastream_file' => NULL,
          'dsversion' => NULL,
        ),
        array(
          'pid' => 'islandora:bookCollection',
          'label' => 'Book Collection',
          'cmodel' => 'islandora:collectionCModel',
          'parent' => 'islandora:root',
          'datastreams' => array(
            array(
              'dsid' => 'COLLECTION_POLICY',
              'datastream_file' => "$module_path/xml/book_collection_policy.xml",
            ),
            array(
              'dsid' => 'TN',
              'datastream_file' => "$module_path/images/Crystal_Clear_filesystem_folder_grey.png",
              'mimetype' => 'image/png',
            ),
          ),
        ),
      ),
    )
  );
}

/**
 * Displays the Internet Archive BookReader.
 *
 * @global user $user
 *   Used to pass user credentials to fedora.
 * @param string $object_id
 *   The identifier of the book object to view.
 *
 * @return string
 *   A fieldset containing the Internet Archive BookReader.
 */
function islandora_book_viewer($object_id) {
  global $user;
  $query = ($user->uid != 0) ? '?uid=' . base64_encode($user->name . ':' . $user->pass) : '';
  $viewer_url = variable_get('islandora_base_url', 'http://localhost:8080/fedora');
  $viewer_url .= "/get/{$object_id}/islandora:viewerSdef/getViewer{$query}";
  return theme('fieldset', array(
      '#title' => t('Viewer - @object_id', array('@object_id' => $object_id)),
      '#collapsible' => TRUE,
      '#collapsed' => FALSE,
      '#value' => "<iframe src='{$viewer_url}' frameborder='0' scrolling='no' style='width: 100%; height: 800px;'>Errors: unable to load viewer</iframe>"
    )
  );
}

/**
 * Load an xslt from the main book page uses mods for most of the display.
 *
 * @global user $user
 * @param FedoraObject $object
 *   The object to view.
 * @param string $query
 *   Default NULL but if supplied then it will execute the query against the book
 *
 * @return string
 *   The view for books.
 */
function islandora_book_create_book_view(FedoraObject $object, $query = NULL) {
  global $user;
  $xsl = new DOMDocument();
  $xsl->load(drupal_get_path('module', 'islandora_book') . '/xsl/book_view.xsl');
  if (isset($object['MODS'])) {
    $dc = simplexml_load_string($object['DC']->content);
    $types = $dc->xpath('//dc:type');
    $proc = new XSLTProcessor();
    $proc->setParameter('', array(
        'USERID' => $user->uid,
        'OBJECTSPAGE' => base_path(),
        'PID' => $object->id,
        'INGESTED' => in_array('ingested', $types) ? 'TRUE' : 'FALSE',
        'SOLRFIELD' => variable_get('islandora_book_solr_subject_field', 'mods.subject'),
      )
    );
    $input = new DOMDocument();
    if (!$input->loadXML($object['MODS']->content)) {
      drupal_set_message(t('Error loading Book View XML.'));
      return t('Error loading Book View XML.');
    }
    else {
      $proc->importStylesheet($xsl);
      return $proc->transformToXML($input);
    }
  }
}

/**
 * @todo Make each tab into a seperate menu Path.
 */
function islandora_book_islandora_tabs($content_models, $pid) {
  module_load_include('inc', 'islandora_book', 'page_object_manager');
  module_load_include('inc', 'islandora_book', 'book_object_manager');
  module_load_include('inc', 'fedora_repository', 'plugins/FedoraObjectDetailedContent');
  $tabset = array();
  $content_model = $content_models[0]->pid;
  if ($content_model == 'islandora:pageCModel' && user_access(PERM_ISLANDORA_BOOK_MANAGE_PAGE)) {
    $return_tabs = get_page_model_management_content($pid);
    $return_tabs['fedora_object_details'] = null;
    return $return_tabs;
  }
  if ($content_model == 'islandora:bookCModel' || $content_model == 'islandora:iaBookCModel') {
    $return_tabs['fedora_object_details'] = null;
    return $return_tabs;
  }
}
