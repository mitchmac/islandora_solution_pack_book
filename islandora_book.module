<?php

/**
 * @file
 *
 * Defines all the hooks this module implements.
 */

// Permissions
define('PERM_ISLANDORA_BOOK_DELETE_PAGES', 'delete pages');
define('PERM_ISLANDORA_BOOK_MANAGE_BOOK', 'manage book object');
define('PERM_ISLANDORA_BOOK_MANAGE_PAGE', 'manage page object');
define('PERM_ISLANDORA_BOOK_MANAGE_DELETED_BOOKS', 'manage deleted books');

/**
 * Implements hook_menu().
 */
function islandora_book_menu() {
  return array(
    'admin/islandora/book' => array(
      'title' => 'Book Collection',
      'description' => 'Configuration the Book solution pack.',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('islandora_book_admin_settings_form'),
      'access arguments' => array('administer site configuration'),
      'file' => 'includes/admin.form.inc',
      'type' => MENU_NORMAL_ITEM,
    ),
    'islandora/object/%islandora_object/pages' => array(
      'title' => 'Pages',
      'type' => MENU_LOCAL_TASK,
      'page callback' => 'islandora_book_pages_menu',
      'page arguments' => array(2),
      'access callback' => 'islandora_book_pages_access_callback',
      'access arguments' => array(2),
    ),
    'islandora/object/%islandora_object/manage/book' => array(
      'title' => 'Book',
      'type' => MENU_LOCAL_TASK,
      'page callback' => 'islandora_book_manage_book_menu',
      'page arguments' => array(2),
      'access callback' => 'islandora_book_manage_book_access_callback',
      'access arguments' => array(2),
      'file' => 'includes/manage_book.inc',
    ),
    'islandora/object/%islandora_object/manage/book/ingest' => array(
      'title' => 'Add Page',
      'page callback' => 'islandora_book_ingest_page',
      'page arguments' => array(2),
      'type' => MENU_LOCAL_ACTION,
      'access callback' => 'islandora_object_access_callback',
      'access arguments' => array(FEDORA_INGEST, 2),
      'file' => 'includes/manage_book.inc',
    ),
    'islandora/object/%islandora_object/manage/page' => array(
      'title' => 'Page',
      'type' => MENU_LOCAL_TASK,
      'page callback' => 'islandora_book_manage_page_menu',
      'page arguments' => array(2),
      'access callback' => 'islandora_book_manage_page_access_callback',
      'access arguments' => array(2),
      'file' => 'includes/manage_page.inc',
    )
  );
}

/**
 * Implements hook_perm().
 */
function islandora_book_perm() {
  return array(
    PERM_ISLANDORA_BOOK_DELETE_PAGES,
    PERM_ISLANDORA_BOOK_MANAGE_BOOK,
    PERM_ISLANDORA_BOOK_MANAGE_PAGE,
    PERM_ISLANDORA_BOOK_MANAGE_DELETED_BOOKS
  );
}

/**
 * Determine whether or not to show this modules pages tab.
 *
 * @param FedoraObject $fedora_object
 *   The book object.
 *
 * @return boolean
 *   TRUE if it should be shown, and FALSE if it should not be shown.
 */
function islandora_book_pages_access_callback($object = NULL) {
  if (!isset($object)) {
    return FALSE;
  }
  $is_book = in_array('islandora:bookCModel', $object->models);
  return $is_book && islandora_object_access_callback(FEDORA_VIEW, $object);
}

/**
 * Determine whether or not to show this modules manage tab.
 *
 * @param FedoraObject $fedora_object
 *   The object being managed.
 *
 * @return boolean
 *   TRUE if it should be shown, and FALSE if it should not be shown.
 */
function islandora_book_manage_book_access_callback($object = NULL) {
  if (!isset($object)) {
    return FALSE;
  }
  $manage_actions = array(
    PERM_ISLANDORA_BOOK_DELETE_PAGES,
    PERM_ISLANDORA_BOOK_MANAGE_BOOK,
    PERM_ISLANDORA_BOOK_MANAGE_PAGE,
    PERM_ISLANDORA_BOOK_MANAGE_DELETED_BOOKS
  );
  $manage_actions_access = array_map('user_access', $manage_actions);
  $can_perform_a_action = array_sum($manage_actions_access) > 0;
  $is_book = in_array('islandora:bookCModel', $object->models);
  return $is_book && $can_perform_a_action && islandora_object_access_callback(FEDORA_MANAGE, $object);
}

/**
 * Determine whether or not to show this modules manage tab.
 *
 * @param FedoraObject $fedora_object
 *   The object being managed.
 *
 * @return boolean
 *   TRUE if it should be shown, and FALSE if it should not be shown.
 */
function islandora_book_manage_page_access_callback($object = NULL) {
  if (!isset($object)) {
    return FALSE;
  }
  $manage_actions = array(
    PERM_ISLANDORA_BOOK_MANAGE_PAGE,
  );
  $manage_actions_access = array_map('user_access', $manage_actions);
  $can_perform_a_action = array_sum($manage_actions_access) > 0;
  $is_page = in_array('islandora:pageCModel', $object->models);
  return $is_page && $can_perform_a_action && islandora_object_access_callback(FEDORA_MANAGE, $object);
}

/**
 * Implementation of hook_theme().
 */
function islandora_book_theme() {
  return array(
    'islandora_book_book' => array(
      'arguments' => array('object' => NULL),
      'file' => 'theme/islandora_book.theme.inc',
      'template' => 'theme/islandora-book'
    ),
    'islandora_book_page' => array(
      'arguments' => array('object' => NULL),
      'file' => 'theme/islandora_book.theme.inc',
      'template' => 'theme/islandora-page'
    ),
    'islandora_book_pages' => array(
      'arguments' => array('object' => NULL),
      'file' => 'theme/islandora_book.theme.inc',
      'template' => 'theme/islandora-pages'
    ),
    'islandora_book_pages_grid' => array(
      'arguments' => array('object' => NULL),
      'file' => 'theme/islandora_book.theme.inc',
      'template' => 'theme/islandora-pages-grid'
    ),
    'islandora_book_pages_list' => array(
      'arguments' => array('object' => NULL),
      'file' => 'theme/islandora_book.theme.inc',
      'template' => 'theme/islandora-pages-list'
    ),
    'islandora_book_manage_book_sequences_form' => array(
      'render element' => 'form',
      'file' => 'theme/islandora_book.theme.inc',
    )
  );
}

/**
 * Implements hook_islandora_xml_form_builder_form_associations().
 */
function islandora_book_islandora_xml_form_builder_form_associations() {
  return array(
    'islandora_book_mods_form' => array(
      'content_model' => 'islandora:bookCModel',
      'form_name' => 'Islandora Book MODS Form',
      'dsid' => 'MODS',
      'title_field' => array('titleInfo', 'title'),
      'transform' => 'mods_to_dc.xsl',
      'template' => FALSE,
    )
  );
}

/**
 * Implements hook_islandora_xml_form_builder_forms().
 */
function islandora_book_islandora_xml_form_builder_forms() {
  $module_path = drupal_get_path('module', 'islandora_book');
  return array(
    'Islandora Book MODS Form' => array(
      'form_file' => "$module_path/data/forms/book_form_mods.xml",
    ),
  );
}

/**
 * Implements hook_islandora_required_objects().
 */
function islandora_book_islandora_required_objects(IslandoraTuque $connection) {
  $module_path = drupal_get_path('module', 'islandora_book');
  $datastreams_path = "$module_path/data/datastreams";
  // Page Content Model
  $page_content_model = $connection->repository->constructObject('islandora:pageCModel');
  $page_content_model->owner = 'fedoraAdmin';
  $page_content_model->label = 'Islandora Page Content Model';
  $page_content_model->models = 'fedora-system:ContentModel-3.0';
  // DS-COMPOSITE-MODEL Datastream
  $datastream = $page_content_model->constructDatastream('DS-COMPOSITE-MODEL', 'M');
  $datastream->label = 'DS-COMPOSITE-MODEL';
  $datastream->mimetype = 'text/xml';
  $datastream->setContentFromFile("$datastreams_path/islandora_pageCModel_ds_composite_model.xml", FALSE);
  $page_content_model->ingestDatastream($datastream);
  // Book Content Model
  $book_content_model = $connection->repository->constructObject('islandora:bookCModel');
  $book_content_model->owner = 'fedoraAdmin';
  $book_content_model->label = 'Islandora Internet Archive Book Content Model';
  $book_content_model->models = 'fedora-system:ContentModel-3.0';
  // DS-COMPOSITE-MODEL Datastream
  $datastream = $book_content_model->constructDatastream('DS-COMPOSITE-MODEL', 'M');
  $datastream->label = 'DS-COMPOSITE-MODEL';
  $datastream->mimetype = 'text/xml';
  $datastream->setContentFromFile("$datastreams_path/islandora_bookCModel_ds_composite_model.xml", FALSE);
  $book_content_model->ingestDatastream($datastream);
  // Book Collection
  $book_collection = $connection->repository->constructObject('islandora:bookCollection');
  $book_collection->owner = 'fedoraAdmin';
  $book_collection->label = 'Book Collection';
  $book_collection->models = 'islandora:collectionCModel';
  $book_collection->relationships->add(FEDORA_RELS_EXT_URI, 'isMemberOfCollection', 'islandora:root');
  // Collection Policy Datastream
  $datastream = $book_collection->constructDatastream('COLLECTION_POLICY', 'M');
  $datastream->label = 'COLLECTION_POLICY';
  $datastream->mimetype = 'text/xml';
  $datastream->setContentFromFile("$datastreams_path/islandora_book_collection_policy.xml", FALSE);
  $book_collection->ingestDatastream($datastream);
  // TN Datastream
  $datastream = $book_collection->constructDatastream('TN', 'M');
  $datastream->label = 'TN';
  $datastream->mimetype = 'image/png';
  $datastream->setContentFromFile("$module_path/images/folder.png", FALSE);
  $book_collection->ingestDatastream($datastream);
  return array(
    'islandora_book'=> array(
      'title' => 'Islandora book',
      'objects' => array(
        $page_content_model,
        $book_content_model,
        $book_collection
      )
    )
  );
}

/**
 * Implements hook_CMODEL_PID_islandora_view_object().
 */
function islandora_book_islandora_bookcmodel_islandora_view_object($object) {
  $output = theme('islandora_book_book', array('object' => $object));
  return array('islandora_book' =>  $output);
}

/**
 * Implements hook_CMODEL_PID_islandora_view_object().
 */
function islandora_book_islandora_pagecmodel_islandora_view_object($object, $page_number, $page_size) {
  $output = theme('islandora_book_page', array('object' => $object));
  return array('islandora_book' => $output);
}

/**
 * Implements hook_islandora_ingest_steps().
 */
function islandora_book_islandora_pagecmodel_islandora_ingest_steps() {
  return array(
    'islandora_book_upload_pages' => array(
      'weight' => 10,
      'type' => 'form',
      'form_id' => 'islandora_book_upload_page_form',
      'module' => 'islandora_book',
      'file' => 'includes/upload_page.form.inc'
    )
  );
}

/**
 * Implements hook_CMODEL_PID_islandora_ingest_post_ingest().
 */
function islandora_book_islandora_pagecmodel_islandora_ingest_post_ingest(FedoraObject $object) {
  module_load_include('inc', 'islandora_book', 'includes/utilities');
  $success = TRUE;
  $derive = variable_get('islandora_book_ingest_derivatives', drupal_map_assoc(array('pdf', 'image', 'ocr')));
  if ($derive['pdf']) {
    $success &= islandora_book_can_derive('PDF', $object) && islandora_book_page_derive_pdf_datastream($object);
  }
  if ($derive['image']) {
    $success &= islandora_book_can_derive('JP2', $object) && islandora_book_page_derive_image_datastreams($object);
  }
  if ($derive['ocr']) {
    $success &= islandora_book_can_derive('OCR', $object) && islandora_book_page_derive_ocr_datastreams($object);
  }
  if (!$success) {
    $msg = t('Could not create all derivatives for %s, For more information please check the logs.', array(
             '%s' => $object->id));
    drupal_set_message($msg, 'error');
    return FALSE;
  }
}

/**
 * Implements hook_form_islandora_object_properties_form_alter().
 */
function islandora_book_form_islandora_object_properties_form_alter(array &$form, array &$form_state) {
  $object = $form_state['object'];
  if (in_array('islandora:bookCModel', $object->models)) {
    $form['delete']['#value'] = t('Delete Book');
  }
}

/**
 * Implements hook_form_islandora_object_properties_form_alter().
 */
function islandora_book_form_islandora_delete_object_form_alter(array &$form, array &$form_state) {
  $object = $form_state['object'];
  if (in_array('islandora:bookCModel', $object->models)) {
    $form['description']['#markup'] = t('This will remove the book object and all related page objects. This action cannot be undone.');
    $form['#submit'] = array('islandora_book_islandora_delete_object_form_delete_pages_submit');
  }
}

/**
 * Submit handler responsible from deleting the all the page objects related to
 * the book object being deleted.
 *
 * @param array $form
 *   The Drupal form.
 * @param array $form_state
 *   The Drupal form state.
 */
function islandora_book_islandora_delete_object_form_delete_pages_submit(array $form, array &$form_state) {
  module_load_include('inc', 'islandora_book', 'includes/delete_pages.batch');
  module_load_include('inc', 'islandora_book', 'includes/utilities');
  $object = $form_state['object'];
  $pages = array_map(function($o) { return $o['pid']; }, islandora_book_get_pages($object));
  batch_set(islandora_book_delete_pages_batch($object, $pages));
  // Called from within this submit handler rather than from the Drupal Form API
  // as we need the object to exist to generate the pages and if we run this
  // batch operation from a submit handler any submit handlers to be called
  // afterwards will not get called, which is a bug/feature of the Form API.
  islandora_delete_object_form_submit($form, $form_state);
}

/**
 * Renders the Pages local menu task.
 *
 * @param FedoraObject $object
 *   The book object to fetch the pages from.
 *
 * @return string
 *   The HTML repersentation of the given books pages.
 */
function islandora_book_pages_menu(FedoraObject $object) {
  return theme('islandora_book_pages', array('object' => $object));
}
